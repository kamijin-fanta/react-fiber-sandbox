{"version":3,"sources":["index.js","App.js"],"names":["ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","count","setCount","fiber","document","getElementById","_reactRootContainer","_internalRoot","className","disabled","value","onClick","console","log","current","child","state","href"],"mappings":"oOAKAA,IAASC,OAAOC,EAAAC,EAAAC,cCFT,WAAgB,IAAAC,EACKC,mBAAS,GADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACPI,EADOJ,EAAA,GAGfK,EAAQC,SAASC,eAAe,QAAQC,oBAAoBC,cAsBlE,OACEd,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SAAOc,UAAQ,EAACC,MAAOT,KAEzBR,EAAAC,EAAAC,cAAA,OAAKa,UAAU,YACbf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCAGAF,EAAAC,EAAAC,cAAA,UAAQgB,QAhCW,WACzBT,EAASD,EAAQ,GACjBW,QAAQC,IAAI,iBAAkBV,EAAMW,QAAQC,SA8BtC,YAGFtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,uHAOAF,EAAAC,EAAAC,cAAA,UAAQgB,QAvCa,WAC3BT,EAAS,GACTA,EAAS,GACTA,EAAS,GACTA,EAAS,GACTU,QAAQC,IAAI,iBAAkBV,EAAMW,QAAQC,SAkCtC,YAGFtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,qGAKAF,EAAAC,EAAAC,cAAA,UAAQgB,QAzCO,WACrBT,EAAS,SAAAc,GAAK,OAAIA,EAAQ,IAC1Bd,EAAS,SAAAc,GAAK,OAAY,EAARA,IAClBJ,QAAQC,IAAI,iBAAkBV,EAAMW,QAAQC,SAsCtC,aAGJtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,wMAGAF,EAAAC,EAAAC,cAAA,2IACkCF,EAAAC,EAAAC,cAAA,yBADlC,mDACgEF,EAAAC,EAAAC,cAAA,WADhE,+HAIAF,EAAAC,EAAAC,cAAA,kDACUF,EAAAC,EAAAC,cAAA,KAAGsB,KAAK,+EAAR,mFDtEF,MAASb,SAASC,eAAe","file":"static/js/main.00cedbe4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport './App.css';\n\nexport function App () {\n  const [count, setCount] = useState(0);\n\n  const fiber = document.getElementById('root')._reactRootContainer._internalRoot;\n\n  const simpleClickHandler = () => {\n    setCount(count + 1);\n    console.log('App fiber node', fiber.current.child);\n    debugger;\n  };\n  const multipleClickHandler = () => {\n    setCount(1);\n    setCount(2);\n    setCount(3);\n    setCount(4);\n    console.log('App fiber node', fiber.current.child);\n    debugger;\n  };\n  const fnClickHandler = () => {\n    setCount(state => state + 1);\n    setCount(state => state * 2);\n    console.log('App fiber node', fiber.current.child);\n    debugger;\n  };\n\n  return (\n    <div className=\"App\">\n      <p>\n        <label>Current Value: </label>\n        <input disabled value={count} />\n      </p>\n      <div className=\"examples\">\n        <div>\n          <h3>単一のDispatch</h3>\n          <pre>\n            setCount(count + 1);\n          </pre>\n          <button onClick={simpleClickHandler}>execute</button>\n        </div>\n        \n        <div>\n          <h3>複数のDispatch</h3>\n          <pre>\n            {`setCount(1);\n            setCount(2);\n            setCount(3);\n            setCount(4);\n            `}\n          </pre>\n          <button onClick={multipleClickHandler}>execute</button>\n        </div>\n\n        <div>\n          <h3>Actionに関数を指定</h3>\n          <pre>\n            {`setCount(state => state + 1);\n            setCount(state => state * 2);\n            `}\n          </pre>\n          <button onClick={fnClickHandler}>execute</button>\n        </div>\n      </div>\n      <div>\n        <h3>利用方法</h3>\n        <p>\n          executeボタンをクリックすると、表示されているコードが実行されます。\n        </p>\n        <p>\n          Dispatchした直後にFiberノードをコンソールに表示し、<code>debugger;</code>を行っています。<br />\n          Chrome/Firefox等のDeveloprToolsで値の確認を行ってください。\n        </p>\n        <p>\n          ソースコード: <a href=\"https://github.com/kamijin-fanta/react-fiber-sandbox/blob/master/src/App.js\">https://github.com/kamijin-fanta/react-fiber-sandbox/blob/master/src/App.js</a>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}